{"ast":null,"code":"var _jsxFileName = \"/Users/Ayaka/Desktop/shopping/src/context/cart.context.jsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState, useEffect, useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst addCartItem = (cartItems, productToAdd) => {\n  // Find If cart items contains productToAdd\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === productToAdd.id); // If found, increment quantity\n\n  if (existingCartItem) {\n    return cartItems.map(cartItem => cartItem.id === productToAdd.id ? { ...cartItem,\n      quantity: cartItem.quantity + 1\n    } : cartItem);\n  } // return new array with modified cartItems / new cart item\n\n\n  return [...cartItems, { ...productToAdd,\n    quantity: 1\n  }];\n};\n\nconst removeCartItem = (cartItems, cartItemToRemove) => {\n  // find the cart item to remove\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToRemove.id); // check if quantity is equal to 1, if it is remove that item from the cart\n\n  if (existingCartItem.quantity === 1) {\n    return cartItems.filter(cartItem => cartItem.id !== cartItemToRemove.id);\n  } // return back cartitems with matching cart item with reduced quantity\n\n\n  return cartItems.map(cartItem => cartItem.id === cartItemToRemove.id ? { ...cartItem,\n    quantity: cartItem.quantity - 1\n  } : cartItem);\n};\n\nconst clearCartItem = (cartItems, cartItemToRemove) => {\n  return cartItems.filter(cartItem => cartItem.id !== cartItemToRemove.id);\n};\n\nexport const CartContext = /*#__PURE__*/createContext({\n  isCartOpen: false,\n  setIsCartOpen: () => {},\n  cartItems: [],\n  addItemToCart: () => {},\n  removeItemFromCart: () => {},\n  clearItemFromCart: () => {},\n  cartCount: 0,\n  cartTotal: 0\n});\nconst CART_ACTION_TYPES = {\n  SET_CART_ITEMS: 'SET_CART_ITEMS',\n  SET_IS_CART_OPEN: 'SET_IS_CART_OPEN'\n};\nconst INITIAL_STATE = {\n  isCartOpen: false,\n  cartItems: [],\n  cartCount: 0,\n  cartTotal: 0\n};\n\nconst cartReducer = (state, action) => {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case CART_ACTION_TYPES.SETCA:\n      return { ...state,\n        ...payload\n      };\n\n    case 'SET_IS_CART_OPEN':\n      return { ...state,\n        isCartOpen: payload\n      };\n\n    default:\n      throw new Error(`Unhandled type of ${type} in cartReducer`);\n  }\n};\n\nexport const CartProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  // const [isCartOpen, setIsCartOpen] = useState(false);\n  // const [cartItems, setCartItems] = useState([]);\n  // const [cartCount, setCartCount] = useState(0);\n  // const [cartTotal, setCartTotal] = useState(0);\n  const [{\n    cartItems,\n    isCartOpen,\n    cartCount,\n    cartTotal\n  }, dispatch] = useReducer(cartReducer, INITIAL_STATE); // useEffect(() => {\n  //   const newCartCount = cartItems.reduce(\n  //     (total, cartItem) => total + cartItem.quantity,\n  //     0\n  //   );\n  //   setCartCount(newCartCount);\n  // }, [cartItems]);\n  // useEffect(() => {\n  //   const newCartTotal = cartItems.reduce(\n  //     (total, cartItem) => total + cartItem.quantity * cartItem.price,\n  //     0\n  //   );\n  //   setCartTotal(newCartTotal);\n  // }, [cartItems]);\n\n  const updateCartItemsReducer = newCartItems => {\n    const newCartCount = cartItems.reduce((total, cartItem) => total + cartItem.quantity, 0);\n    const newCartTotal = cartItems.reduce((total, cartItem) => total + cartItem.quantity * cartItem.price, 0);\n    dispatch({\n      type: 'SET_CART_ITEMS',\n      payload: {\n        cartItems: newCartItems,\n        cartTotal: newCartTotal,\n        cartCount: newCartCount\n      }\n    });\n  };\n\n  const addItemToCart = productToAdd => {\n    const newCartItems = addCartItem(cartItems, productToAdd);\n    updateCartItemsReducer(newCartItems);\n  };\n\n  const removeItemToCart = cartItemToRemove => {\n    const newCartItems = removeCartItem(cartItems, cartItemToRemove);\n    updateCartItemsReducer(newCartItems);\n  };\n\n  const clearItemFromCart = cartItemToClear => {\n    const newCartItems = clearCartItem(cartItems, cartItemToClear);\n    updateCartItemsReducer(newCartItems);\n  };\n\n  const setIsCartOpen = bool => {\n    dispatch({\n      type: 'SET_IS_CART_OPEN',\n      payload: bool\n    });\n  };\n\n  const value = {\n    isCartOpen,\n    setIsCartOpen,\n    addItemToCart,\n    removeItemToCart,\n    clearItemFromCart,\n    cartItems,\n    cartCount,\n    cartTotal\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 10\n  }, this);\n};\n\n_s(CartProvider, \"3paH1pqC9GUp4D7OqFgw8GuVIi0=\");\n\n_c = CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","useReducer","addCartItem","cartItems","productToAdd","existingCartItem","find","cartItem","id","map","quantity","removeCartItem","cartItemToRemove","filter","clearCartItem","CartContext","isCartOpen","setIsCartOpen","addItemToCart","removeItemFromCart","clearItemFromCart","cartCount","cartTotal","CART_ACTION_TYPES","SET_CART_ITEMS","SET_IS_CART_OPEN","INITIAL_STATE","cartReducer","state","action","type","payload","SETCA","Error","CartProvider","children","dispatch","updateCartItemsReducer","newCartItems","newCartCount","reduce","total","newCartTotal","price","removeItemToCart","cartItemToClear","bool","value"],"sources":["/Users/Ayaka/Desktop/shopping/src/context/cart.context.jsx"],"sourcesContent":["import { createContext, useState, useEffect, useReducer } from 'react';\n\nconst addCartItem = (cartItems, productToAdd) => {\n  // Find If cart items contains productToAdd\n  const existingCartItem = cartItems.find(\n    (cartItem) => cartItem.id === productToAdd.id\n  );\n\n  // If found, increment quantity\n  if (existingCartItem) {\n    return cartItems.map((cartItem) =>\n      cartItem.id === productToAdd.id\n        ? { ...cartItem, quantity: cartItem.quantity + 1 }\n        : cartItem\n    );\n  }\n\n  // return new array with modified cartItems / new cart item\n  return [...cartItems, { ...productToAdd, quantity: 1 }];\n};\n\nconst removeCartItem = (cartItems, cartItemToRemove) => {\n  // find the cart item to remove\n  const existingCartItem = cartItems.find(\n    (cartItem) => cartItem.id === cartItemToRemove.id\n  );\n\n  // check if quantity is equal to 1, if it is remove that item from the cart\n  if (existingCartItem.quantity === 1) {\n    return cartItems.filter((cartItem) => cartItem.id !== cartItemToRemove.id);\n  }\n\n  // return back cartitems with matching cart item with reduced quantity\n  return cartItems.map((cartItem) =>\n    cartItem.id === cartItemToRemove.id\n      ? { ...cartItem, quantity: cartItem.quantity - 1 }\n      : cartItem\n  );\n};\n\nconst clearCartItem = (cartItems, cartItemToRemove) => {\n  return cartItems.filter((cartItem) => cartItem.id !== cartItemToRemove.id);\n};\n\nexport const CartContext = createContext({\n  isCartOpen: false,\n  setIsCartOpen: () => {},\n  cartItems: [],\n  addItemToCart: () => {},\n  removeItemFromCart: () => {},\n  clearItemFromCart: () => {},\n  cartCount: 0,\n  cartTotal: 0,\n});\n\nconst CART_ACTION_TYPES = {\n  SET_CART_ITEMS: 'SET_CART_ITEMS',\n  SET_IS_CART_OPEN: 'SET_IS_CART_OPEN',\n};\nconst INITIAL_STATE = {\n  isCartOpen: false,\n  cartItems: [],\n  cartCount: 0,\n  cartTotal: 0,\n};\n\nconst cartReducer = (state, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case CART_ACTION_TYPES.SETCA:\n      return {\n        ...state,\n        ...payload,\n      };\n\n    case 'SET_IS_CART_OPEN':\n      return {\n        ...state,\n        isCartOpen: payload,\n      };\n\n    default:\n      throw new Error(`Unhandled type of ${type} in cartReducer`);\n  }\n};\n\nexport const CartProvider = ({ children }) => {\n  // const [isCartOpen, setIsCartOpen] = useState(false);\n  // const [cartItems, setCartItems] = useState([]);\n  // const [cartCount, setCartCount] = useState(0);\n  // const [cartTotal, setCartTotal] = useState(0);\n\n  const [{ cartItems, isCartOpen, cartCount, cartTotal }, dispatch] =\n    useReducer(cartReducer, INITIAL_STATE);\n  // useEffect(() => {\n  //   const newCartCount = cartItems.reduce(\n  //     (total, cartItem) => total + cartItem.quantity,\n  //     0\n  //   );\n  //   setCartCount(newCartCount);\n  // }, [cartItems]);\n\n  // useEffect(() => {\n  //   const newCartTotal = cartItems.reduce(\n  //     (total, cartItem) => total + cartItem.quantity * cartItem.price,\n  //     0\n  //   );\n  //   setCartTotal(newCartTotal);\n  // }, [cartItems]);\n\n  const updateCartItemsReducer = (newCartItems) => {\n    const newCartCount = cartItems.reduce(\n      (total, cartItem) => total + cartItem.quantity,\n      0\n    );\n\n    const newCartTotal = cartItems.reduce(\n      (total, cartItem) => total + cartItem.quantity * cartItem.price,\n      0\n    );\n\n    dispatch({\n      type: 'SET_CART_ITEMS',\n      payload: {\n        cartItems: newCartItems,\n        cartTotal: newCartTotal,\n        cartCount: newCartCount,\n      },\n    });\n  };\n\n  const addItemToCart = (productToAdd) => {\n    const newCartItems = addCartItem(cartItems, productToAdd);\n    updateCartItemsReducer(newCartItems);\n  };\n\n  const removeItemToCart = (cartItemToRemove) => {\n    const newCartItems = removeCartItem(cartItems, cartItemToRemove);\n    updateCartItemsReducer(newCartItems);\n  };\n\n  const clearItemFromCart = (cartItemToClear) => {\n    const newCartItems = clearCartItem(cartItems, cartItemToClear);\n    updateCartItemsReducer(newCartItems);\n  };\n\n  const setIsCartOpen = (bool) => {\n    dispatch({ type: 'SET_IS_CART_OPEN', payload: bool });\n  };\n\n  const value = {\n    isCartOpen,\n    setIsCartOpen,\n    addItemToCart,\n    removeItemToCart,\n    clearItemFromCart,\n    cartItems,\n    cartCount,\n    cartTotal,\n  };\n\n  return <CartContext.Provider value={value}>{children}</CartContext.Provider>;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}