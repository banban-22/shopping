{"ast":null,"code":"import { initializeApp } from 'firebase/app';\nimport { getAuth, signInWithRedirect, signInWithPopup, GoogleAuthProvider, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut } from 'firebase/auth';\nimport { getFirestore, doc, getDoc, setDoc } from 'firebase/firestore';\nconst firebaseConfig = {\n  apiKey: 'AIzaSyDQfv3CJYjDpQgXtIy-np1UcW__o45oDzc',\n  authDomain: 'shopping-92034.firebaseapp.com',\n  projectId: 'shopping-92034',\n  storageBucket: 'shopping-92034.appspot.com',\n  messagingSenderId: '159216649187',\n  appId: '1:159216649187:web:aefdc46a124d6fd2e696d6'\n}; // Initialize Firebase\n\nconst firebaseApp = initializeApp(firebaseConfig);\nconst googleProvider = new GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, googleProvider);\nexport const signInWithGoogleRedirect = () => signInWithRedirect(auth, googleProvider);\nexport const db = getFirestore();\nexport const createUserDocumentFromAuth = async function (userAuth) {\n  let additionalInfo = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (!userAuth) return;\n  const userDocRef = doc(db, 'users', userAuth.uid);\n  console.log(userDocRef);\n  const userSnapshot = await getDoc(userDocRef);\n  console.log(userSnapshot);\n  console.log(userSnapshot.exists()); // if user data does not exist\n  // create/set the document with the data from userAuth in my collection\n\n  if (!userSnapshot.exists()) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt,\n        ...additionalInfo\n      });\n    } catch (error) {\n      console.log('error creating the user', error.message);\n    }\n  } // return userDocRef\n\n\n  return userDocRef;\n};\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await createUserWithEmailAndPassword(auth, email, password);\n};\nexport const signInAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await signInWithEmailAndPassword(auth, email, password);\n};","map":{"version":3,"names":["initializeApp","getAuth","signInWithRedirect","signInWithPopup","GoogleAuthProvider","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","getFirestore","doc","getDoc","setDoc","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseApp","googleProvider","setCustomParameters","prompt","auth","signInWithGooglePopup","signInWithGoogleRedirect","db","createUserDocumentFromAuth","userAuth","additionalInfo","userDocRef","uid","console","log","userSnapshot","exists","displayName","email","createdAt","Date","error","message","createAuthUserWithEmailAndPassword","password","signInAuthUserWithEmailAndPassword"],"sources":["/Users/Ayaka/Desktop/shopping/src/utils/firebase/firebase.utils.js"],"sourcesContent":["import { initializeApp } from 'firebase/app';\nimport {\n  getAuth,\n  signInWithRedirect,\n  signInWithPopup,\n  GoogleAuthProvider,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  signOut\n} from 'firebase/auth';\n\nimport { getFirestore, doc, getDoc, setDoc } from 'firebase/firestore';\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyDQfv3CJYjDpQgXtIy-np1UcW__o45oDzc',\n  authDomain: 'shopping-92034.firebaseapp.com',\n  projectId: 'shopping-92034',\n  storageBucket: 'shopping-92034.appspot.com',\n  messagingSenderId: '159216649187',\n  appId: '1:159216649187:web:aefdc46a124d6fd2e696d6',\n};\n\n// Initialize Firebase\nconst firebaseApp = initializeApp(firebaseConfig);\n\nconst googleProvider = new GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: 'select_account',\n});\n\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () =>\n  signInWithPopup(auth, googleProvider);\nexport const signInWithGoogleRedirect = () =>\n  signInWithRedirect(auth, googleProvider);\n\nexport const db = getFirestore();\n\nexport const createUserDocumentFromAuth = async (\n  userAuth,\n  additionalInfo = {}\n) => {\n  if (!userAuth) return;\n  const userDocRef = doc(db, 'users', userAuth.uid);\n  console.log(userDocRef);\n\n  const userSnapshot = await getDoc(userDocRef);\n  console.log(userSnapshot);\n  console.log(userSnapshot.exists());\n\n  // if user data does not exist\n  // create/set the document with the data from userAuth in my collection\n\n  if (!userSnapshot.exists()) {\n    const { displayName, email } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt,\n        ...additionalInfo,\n      });\n    } catch (error) {\n      console.log('error creating the user', error.message);\n    }\n  }\n\n  // return userDocRef\n  return userDocRef;\n};\n\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await createUserWithEmailAndPassword(auth, email, password);\n};\n\nexport const signInAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await signInWithEmailAndPassword(auth, email, password);\n};\n"],"mappings":"AAAA,SAASA,aAAT,QAA8B,cAA9B;AACA,SACEC,OADF,EAEEC,kBAFF,EAGEC,eAHF,EAIEC,kBAJF,EAKEC,8BALF,EAMEC,0BANF,EAOEC,OAPF,QAQO,eARP;AAUA,SAASC,YAAT,EAAuBC,GAAvB,EAA4BC,MAA5B,EAAoCC,MAApC,QAAkD,oBAAlD;AAEA,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,yCADa;EAErBC,UAAU,EAAE,gCAFS;EAGrBC,SAAS,EAAE,gBAHU;EAIrBC,aAAa,EAAE,4BAJM;EAKrBC,iBAAiB,EAAE,cALE;EAMrBC,KAAK,EAAE;AANc,CAAvB,C,CASA;;AACA,MAAMC,WAAW,GAAGnB,aAAa,CAACY,cAAD,CAAjC;AAEA,MAAMQ,cAAc,GAAG,IAAIhB,kBAAJ,EAAvB;AACAgB,cAAc,CAACC,mBAAf,CAAmC;EACjCC,MAAM,EAAE;AADyB,CAAnC;AAIA,OAAO,MAAMC,IAAI,GAAGtB,OAAO,EAApB;AACP,OAAO,MAAMuB,qBAAqB,GAAG,MACnCrB,eAAe,CAACoB,IAAD,EAAOH,cAAP,CADV;AAEP,OAAO,MAAMK,wBAAwB,GAAG,MACtCvB,kBAAkB,CAACqB,IAAD,EAAOH,cAAP,CADb;AAGP,OAAO,MAAMM,EAAE,GAAGlB,YAAY,EAAvB;AAEP,OAAO,MAAMmB,0BAA0B,GAAG,gBACxCC,QADwC,EAGrC;EAAA,IADHC,cACG,uEADc,EACd;EACH,IAAI,CAACD,QAAL,EAAe;EACf,MAAME,UAAU,GAAGrB,GAAG,CAACiB,EAAD,EAAK,OAAL,EAAcE,QAAQ,CAACG,GAAvB,CAAtB;EACAC,OAAO,CAACC,GAAR,CAAYH,UAAZ;EAEA,MAAMI,YAAY,GAAG,MAAMxB,MAAM,CAACoB,UAAD,CAAjC;EACAE,OAAO,CAACC,GAAR,CAAYC,YAAZ;EACAF,OAAO,CAACC,GAAR,CAAYC,YAAY,CAACC,MAAb,EAAZ,EAPG,CASH;EACA;;EAEA,IAAI,CAACD,YAAY,CAACC,MAAb,EAAL,EAA4B;IAC1B,MAAM;MAAEC,WAAF;MAAeC;IAAf,IAAyBT,QAA/B;IACA,MAAMU,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;IAEA,IAAI;MACF,MAAM5B,MAAM,CAACmB,UAAD,EAAa;QACvBM,WADuB;QAEvBC,KAFuB;QAGvBC,SAHuB;QAIvB,GAAGT;MAJoB,CAAb,CAAZ;IAMD,CAPD,CAOE,OAAOW,KAAP,EAAc;MACdR,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCO,KAAK,CAACC,OAA7C;IACD;EACF,CA1BE,CA4BH;;;EACA,OAAOX,UAAP;AACD,CAjCM;AAmCP,OAAO,MAAMY,kCAAkC,GAAG,OAAOL,KAAP,EAAcM,QAAd,KAA2B;EAC3E,IAAI,CAACN,KAAD,IAAU,CAACM,QAAf,EAAyB;EACzB,OAAO,MAAMtC,8BAA8B,CAACkB,IAAD,EAAOc,KAAP,EAAcM,QAAd,CAA3C;AACD,CAHM;AAKP,OAAO,MAAMC,kCAAkC,GAAG,OAAOP,KAAP,EAAcM,QAAd,KAA2B;EAC3E,IAAI,CAACN,KAAD,IAAU,CAACM,QAAf,EAAyB;EACzB,OAAO,MAAMrC,0BAA0B,CAACiB,IAAD,EAAOc,KAAP,EAAcM,QAAd,CAAvC;AACD,CAHM"},"metadata":{},"sourceType":"module"}